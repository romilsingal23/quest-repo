name: Deploy GCP Cloud Functions and Pub/Sub

on:
  push:
    branches:
      - dev  # Only dev is pushed directly

  pull_request:
    types:
      - closed  # Runs only when PR is merged
    branches:
      - test
      - stage
      - prod
      - main

permissions:
  id-token: 'write'
  contents: 'read'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function: 
          - name: "payor"
            topic: "qaw-snowflake-to-bq-payor-topic"
          - name: "healthsystem"
            topic: "qaw-snowflake-to-bq-healthsystem-topic"
     
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Environment
        run: |
          case "${{ github.ref_name }}" in
            "dev")
              echo "PROJECT_ID=prj-eda-qadp-raw-dev-48699" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-dataflow-us-4001@prj-eda-qadp-raw-dev-48699.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/476093664680/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider" >> $GITHUB_ENV
              echo "GCS_BUCKET=gs://gcs-duse4usw1-eda-qadp-raw-dev-48699" >> $GITHUB_ENV
              echo "ENVIRONMENT=dev" >> $GITHUB_ENV
              ;;
            "test")
              echo "PROJECT_ID=prj-test-123456" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-composer-test@prj-test-123456.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/wif-test/providers/wif-provider" >> $GITHUB_ENV
              echo "GCS_BUCKET=gs://test-composer-bucket" >> $GITHUB_ENV
              echo "ENVIRONMENT=test" >> $GITHUB_ENV
              ;;
            "stage")
              echo "PROJECT_ID=prj-stage-123456" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-composer-stage@prj-stage-123456.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/wif-stage/providers/wif-provider" >> $GITHUB_ENV
              echo "GCS_BUCKET=gs://stage-composer-bucket" >> $GITHUB_ENV
              echo "ENVIRONMENT=stage" >> $GITHUB_ENV
              ;;
            "prod")
              echo "PROJECT_ID=prj-prod-123456" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-composer-prod@prj-prod-123456.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/wif-prod/providers/wif-provider" >> $GITHUB_ENV
              echo "GCS_BUCKET=gs://prod-composer-bucket" >> $GITHUB_ENV
              echo "ENVIRONMENT=prod" >> $GITHUB_ENV
              ;;
            "main")
              echo "Final code storageâ€”No deployment." && exit 0
              ;;
            *)
              echo "Branch not configured for deployment." && exit 1
              ;;
          esac
  
      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: "${{ env.PROJECT_ID }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}"
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
      
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Create Pub/Sub topic
        run: |
          echo "Topic: ${{ matrix.function.name }}"
          gcloud pubsub topics create "${{ matrix.function.topic }}" --quiet || echo "Topic already exists"

      - name: Configure Cloud Storage notification
        run: |
          EXISTING_NOTIFICATIONS=$(gsutil notification list "${{ env.GCS_BUCKET }}" | grep "projects/${{ env.PROJECT_ID }}/topics/${{ matrix.function.topic }}" || true)
          
          if [ -z "$EXISTING_NOTIFICATIONS" ]; then
            echo "Creating new notification for topic: ${{ matrix.function.topic }}"
            gsutil notification create -f json -t "projects/${{ env.PROJECT_ID }}/topics/${{ matrix.function.topic }}" \
              -e OBJECT_FINALIZE -p "source/snowflake/incremental/${{ matrix.function.name }}" \
              "${{ env.GCS_BUCKET }}"
          else
            echo "Notification already exists for topic: ${{ matrix.function.topic }}, skipping creation."
          fi

      - name: Deploy Cloud Function
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%dt%H-%M-%S")

          gcloud functions deploy "qaw_snowflake_to_bq_inc_${{ matrix.function.name }}_filewatcher" \
            --gen2 \
            --region=us-east4 \
            --runtime=python312 \
            --source="${{ env.GCS_BUCKET }}/cloud_functions/qaw_snowflake_to_bq_inc_${{ matrix.function.name }}_filewatcher.zip" \
            --entry-point=main \
            --trigger-topic="${{ matrix.function.topic }}" \
            --no-allow-unauthenticated \
            --ingress-settings=internal-only \
            --run-service-account="${{ env.SERVICE_ACCOUNT }}" \
            --update-env-vars PROJECT_ID=${{ env.PROJECT_ID }},COMPOSER_TRIGGER_URL="https://10957b56d816438e9abf932087afa40-east4.composer.googleusercontent.com",TARGET_DAG="qaw_snowflake_to_bq_inc_${{ matrix.function.name }}",SOURCE_BUCKET="${{ env.GCS_BUCKET }}",SOURCE_FOLDER="source/snowflake/incremental/" \
            --update-labels="appserviceid=snsvc0005368,appservicename=google-cloud-platform-development,costcenter=ttd,datatype=goog-terraform,provisioned=true,iac=terraform,tierid=tier-1,timestamp=$TIMESTAMP"
