name: OS Packer Pipeline

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: 'write'
  contents: 'read'
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [rhel, ubuntu, win, sql]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@v3.0.0

      - name: Run Packer for ${{ matrix.os }}
        run: |
          packer init gcp-${{ matrix.os }}.pkr.hcl
          packer build gcp-${{ matrix.os }}.pkr.hcl
        env:
          PACKER_LOG: 1
          PACKER_LOG_PATH: packer-${{ matrix.os }}.log
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}

      - name: Extract Image Name for ${{ matrix.os }}
        id: get-image-name
        run: |
          IMAGE_NAME=$(awk '/A disk image was created/ {print $NF}' packer-${{ matrix.os }}.log | head -n1 | tr -d '\r\n}"')
          echo "image_name=$IMAGE_NAME" >> "$GITHUB_OUTPUT"

      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

      - name: Authenticate to Wiz
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Run wiz-cli GCP images scan
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          IMAGE_NAME="${{ steps.get-image-name.outputs.image_name }}"
          RESULT_FILE="results-${{ matrix.os }}-${TIMESTAMP}.csv.zip"
          
          echo "Using result file: $RESULT_FILE"
          echo "RESULT_FILE=$RESULT_FILE" >> "$GITHUB_ENV"
          ./wizcli vm-image scan --id $IMAGE_NAME --subscriptionId prj-ospacker-useast-dev-23295 --region us-east4 -o $RESULT_FILE,csv-zip,false
        env:
          IMAGE_NAME: ${{ steps.get-image-name.outputs.image_name }}
        continue-on-error: true


      - name: Upload results.csv.zip to bucket 
        uses: google-github-actions/upload-cloud-storage@v2
        with:
         path: "${{ env.RESULT_FILE }}"
         destination: "packer-images-bucket/vul_report"

  cleanup-old-images:
    runs-on: ubuntu-latest
    needs: [build]  # Runs after Wiz scanning is done
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-cloud-compute

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'

      - name: Run Cleanup Script
        run: python cleanup_old_images.py