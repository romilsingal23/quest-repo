resource "google_project_iam_binding" "project_iam" {
  project   = var.project_id
  for_each = toset(var.role)
  #count     = length(var.roles)
  role      = each.key
  members   = var.members
 
/*dynamic "condition" {
    for_each = var.condition  == null ? [] :var.condition[*]
    content {
      expression        = lookup(condition.value, "expression")
      title             = lookup(condition.value, "title")
      description       = lookup(condition.value, "description" )  
    }  
  }
   */
}


resource "google_project_iam_custom_role" "role" {
  role_id     = var.role_id
  project     = var.project_id
  title       = var.title
  permissions = var.permissions
  stage       = var.stage
  description = var.description
}

/******************************************
  Google Cloud Project IAM Policy
 *****************************************/
resource "google_folder_iam_binding" "folder_iam" {
  folder  = var.folder
  count   = length(var.roles)
  role    = var.roles[count.index]
  members = var.members
  
  /*
  dynamic "audit_log_config" {
    for_each = var.audit_log_config[*]
    content {
      log_type    = lookup(audit_log_config.value, "log_type")
      exempted_members  = lookup(audit_log_config.value, "exempted_members")
    }
  }
  */

  dynamic "condition" {
    for_each = var.condition[*]
    content {
      expression = lookup(condition.value, "expression")
      title = lookup(condition.value, "title")
      description = lookup(condition.value, "description")
    }
  }


}

/* data "google_organization" "org" {
  domain          = var.domain
} */

resource "google_organization_iam_binding" "organization" {
  org_id          =  var. org_id 
  role            = var.role
        
  members         = var.members

  dynamic "condition" {
    for_each      = var.condition [*] 
    content {
      title       = lookup(condition.value , "title" , "")
      description = lookup(condition.value , "description" , "")
      expression  = lookup(condition.value , "expression" , "")
    } 
  }
}