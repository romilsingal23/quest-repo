name: Deploy Cloud SQL and DNS

on:
  push:
    branches:
      - dev  
      - test
    paths:
      - '.github/workflows/cloud-sql.yml'
  pull_request:
    branches:
      - test
      - stage
      - prod
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (dev, test, stage, prod)'
        required: true
        type: choice
        options:
          - dev
          - test
          - stage
          - prod

jobs:
  cloud-sql:
    runs-on: gcp-arc-rsd
    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Environment
        run: |
          # Determine the branch or environment based on the event type
          case "${{ github.event_name }}" in
            "push")
              BRANCH="${{ github.ref_name }}"
              ;;
            "pull_request")
              BRANCH="${{ github.base_ref }}"  # Target branch of PR
              ;;
            "workflow_dispatch")
              # Use the provided input for the environment
              ENVIRONMENT="${{ github.event.inputs.environment }}"
              case "$ENVIRONMENT" in
                "dev" | "test" | "stage" | "prod")
                  BRANCH="$ENVIRONMENT"
                  ;;
                *)
                  echo "Invalid environment provided: $ENVIRONMENT"
                  exit 1
                  ;;
              esac
              ;;
            *)
              echo "Unsupported event: ${{ github.event_name }}"
              exit 1
              ;;
          esac

          echo "Triggered by event: ${{ github.event_name }} on branch/environment: $BRANCH"

          # Set environment-specific variables
          case "$BRANCH" in
            "dev")
              echo "PROJECT_ID=prj-cus-qaw-dev-66576" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-use4-cloudsql-pipeline@prj-cus-qaw-dev-66576.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/865276656676/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider" >> $GITHUB_ENV
              echo "ENVIRONMENT=dev" >> $GITHUB_ENV
              echo "PSC_IP=10.141.132.5" >> $GITHUB_ENV
              ;;
            "test")
              echo "PROJECT_ID=prj-cus-qaw-tst-66576" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-use4-cloudsql-pipeline@prj-cus-qaw-tst-66576.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/139527806265/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider" >> $GITHUB_ENV
              echo "ENVIRONMENT=test" >> $GITHUB_ENV
              echo "PSC_IP=10.141.135.5" >> $GITHUB_ENV
              ;;
            "stage")
              echo "PROJECT_ID=prj-shrd-stg-67236" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-composer-stage@prj-stage-123456.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/wif-stage/providers/wif-provider" >> $GITHUB_ENV
              echo "ENVIRONMENT=stage" >> $GITHUB_ENV
              ;;
            "prod")
              echo "PROJECT_ID=prj-shrd-prd-67236" >> $GITHUB_ENV
              echo "SERVICE_ACCOUNT=sa-composer-prod@prj-prod-123456.iam.gserviceaccount.com" >> $GITHUB_ENV
              echo "WORKLOAD_IDENTITY_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/wif-prod/providers/wif-provider" >> $GITHUB_ENV
              echo "ENVIRONMENT=prod" >> $GITHUB_ENV
              ;;
            "main")
              echo "Final code storageâ€”No deployment."
              exit 0
              ;;
            *)
              echo "Branch/environment not configured for deployment: $BRANCH"
              exit 1
              ;;
          esac

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: "${{ env.PROJECT_ID }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}"
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Check if Cloud SQL Instance Exists
        id: check-sql
        run: |
          if gcloud sql instances describe qaw-app-db --project=${{ env.PROJECT_ID }} > /dev/null 2>&1; then
            echo "SQL_EXISTS=true" >> $GITHUB_ENV
          else
            echo "SQL_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Cloud SQL Instance (If Not Exists)
        if: env.SQL_EXISTS == 'false'
        run: |
          gcloud sql instances create qaw-app-db \
          --project=${{ env.PROJECT_ID }} \
          --region=us-east4 \
          --enable-private-service-connect \
          --availability-type=REGIONAL \
          --no-assign-ip \
          --tier=db-custom-2-7680 \
          --database-version=POSTGRES_16 \
          --edition=ENTERPRISE \
          --database-flags=cloudsql.enable_pgaudit=on,log_hostname=on \
          --enable-password-policy \
          --psc-auto-connections=network=projects/prj-shrd-ntwk-3/global/networks/vpc-non-prod-shared-host,project=prj-shrd-ntwk-3 \
          --disk-encryption-key=projects/prj-key-mgt-dev-20334/locations/us-east4/keyRings/qadp/cryptoKeys/cloudsql \
          --ssl-mode=ENCRYPTED_ONLY \
          --backup-start-time=03:00 \
          --enable-point-in-time-recovery \
          --deletion-protection

      - name: Extract PSC Service Attachment Link
        run: |
          SERVICE_ATTACHMENT=$(gcloud sql instances describe qaw-app-db \
            --project=${{ env.PROJECT_ID }} \
            --format="value(pscServiceAttachmentLink)")
          echo "SERVICE_ATTACHMENT=$SERVICE_ATTACHMENT" >> $GITHUB_ENV

      - name: Switch gcloud project to Shared VPC
        run: gcloud config set project prj-shrd-ntwk-3

      - name: Check if Private IP Address for PSC Exists
        id: check-ip
        run: |
          if gcloud compute addresses describe ip-npr-psc-qaw-app-db-${{ env.ENVIRONMENT }}-cloudsql \
            --project=prj-shrd-ntwk-3 --region=us-east4 > /dev/null 2>&1; then
            echo "IP_EXISTS=true" >> $GITHUB_ENV
          else
            echo "IP_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Private IP for PSC Endpoint (If Not Exists)
        if: env.IP_EXISTS == 'false'
        run:  |
          gcloud compute addresses create ip-npr-psc-qaw-app-db-${{ env.ENVIRONMENT }}-cloudsql \
            --project=prj-shrd-ntwk-3 \
            --region=us-east4 \
            --subnet=sn-ue4-cloudsql-psc-dev-1 \
            --addresses=${{ env.PSC_IP }}

      - name: Create Forwarding Rule to Connect PSC to Service Attachment
        run: |
          gcloud compute forwarding-rules create qaw-app-db-${{ env.ENVIRONMENT }}-cloudsql \
            --address=ip-npr-psc-qaw-app-db-${{ env.ENVIRONMENT }}-cloudsql \
            --project=prj-shrd-ntwk-3 \
            --region=us-east4 \
            --network=vpc-non-prod-shared-host \
            --target-service-attachment=${{ env.SERVICE_ATTACHMENT }} \
            --allow-psc-global-access
